{"ast":null,"code":"// import './App.css';\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import Row from './components/Row';\n\n// const url = 'http://localhost:3001/'\n\n// function App() {\n\n//   const [task, setTask] = useState('');\n//   const [tasks, setTasks] = useState([]);\n\n//   useEffect(() => {\n//     axios.get(url)\n//     .then(response => {\n//       setTasks(response.data) \n//     }).catch(error => {\n//       alert(error.response.data.error ? error.response.data.error : error)\n//     })\n//   }, [])\n\n//   const addTask = () => {\n//     // const headers = {headers: {Authorization:user.token}}\n//     axios.post(url + 'create', {\n//       description: task\n//     })\n//     .then(response => {\n//       setTasks([...tasks,{id: response.data.id,description: task}])\n//       setTask('')\n//     }).catch(error => {\n//         alert (error.response.data.error ? error.response.data.error : error)\n//     })\n//   }\n\n//   const deleteTask = (id) => {\n//     // const headers = {headers: {Authorization:user.token}}\n//     axios.delete(url + 'delete/' + id) \n//     .then(response => {\n//       const withoutRemoved = tasks.filter((item) => item.id !== id )\n//       setTasks(withoutRemoved)\n//     }).catch(error => {\n//         alert (error.response.data.error ? error.response.data.error : error)\n//     })\n//   }\n\n//   return (\n//     <div id=\"container\">\n//       <h3>Todos</h3>\n//       <form>\n//         <input type=\"Add new task\" \n//          value={task}\n//          onChange={e => setTask(e.target.value)}\n//          onKeyDown={e => {\n//            if (e.key === 'Enter') {\n//              e.preventDefault()\n//              addTask()\n//            }\n//          }}\n//           />\n//       </form>\n//       <ul>\n//         {\n//           tasks.map(item => (\n//             <Row key={item.id} item={item} deleteTask={deleteTask} />\n//           ))\n//         }\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import Row from './components/Row';\n\n// const url = 'http://localhost:3001/'; \n\n// function App() {\n//   const [task, setTask] = useState(''); // Stores the current input value\n//   const [tasks, setTasks] = useState([]); \n\n//   // Fetch tasks when the component mounts\n//   useEffect(() => {\n//     axios.get(url)  // Fetch tasks from backend\n//       .then(response => setTasks(response.data))  // Update state with fetched tasks\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);\n//       });\n//   }, []);\n\n//   // Add a new task\n//   const addTask = () => {\n//     if (!task.trim()) return; // Avoid adding empty tasks\n\n//     axios.post(url + 'create', { description: task })  // POST new task to backend\n//       .then(response => {\n//         setTasks(prevTasks => [\n//           ...prevTasks, \n//           { id: response.data.id, description: task }\n//         ]);  // Update tasks state with new task\n//         setTask('');  // Clear input field\n//       })\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);  // Show error if any\n//       });\n//   };\n\n//   // Delete a task\n//   const deleteTask = (id) => {\n//     axios.delete(url + 'delete/' + id) // Delete task by ID\n//       .then(response => {\n//         setTasks(prevTasks => prevTasks.filter((item) => item.id !== id)); // Remove task from state\n//       })\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);\n//       });\n//   };\n\n//   return (\n//     <div id=\"container\">\n//       <h3>Todos</h3>\n//       <form>\n//         <input\n//           placeholder=\"Add new task\"\n//           value={task}\n//           onChange={(e) => setTask(e.target.value)}\n//           onKeyDown={(e) => {\n//             if (e.key === 'Enter') {\n//               e.preventDefault();\n//               addTask(); // Add task on Enter key\n//             }\n//           }}\n//         />\n//       </form>\n\n//         <ul>\n\n//   {\n//   tasks.map(item => (\n//     <Row \n//       key={item.id} \n//       item={item} \n//       deleteTask={deleteTask} \n//     />\n//   ))\n//   }\n// </ul>\n\n//     </div>\n//   );\n// }\n\nexport default App;","map":{"version":3,"names":["App"],"sources":["D:/OAMK WORK/Web-Development Project 2024/Todo application back/todo/src/App.js"],"sourcesContent":["// import './App.css';\n// import { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import Row from './components/Row';\n\n// const url = 'http://localhost:3001/'\n\n// function App() {\n\n//   const [task, setTask] = useState('');\n//   const [tasks, setTasks] = useState([]);\n\n//   useEffect(() => {\n//     axios.get(url)\n//     .then(response => {\n//       setTasks(response.data) \n//     }).catch(error => {\n//       alert(error.response.data.error ? error.response.data.error : error)\n//     })\n//   }, [])\n\n//   const addTask = () => {\n//     // const headers = {headers: {Authorization:user.token}}\n//     axios.post(url + 'create', {\n//       description: task\n//     })\n//     .then(response => {\n//       setTasks([...tasks,{id: response.data.id,description: task}])\n//       setTask('')\n//     }).catch(error => {\n//         alert (error.response.data.error ? error.response.data.error : error)\n//     })\n//   }\n\n//   const deleteTask = (id) => {\n//     // const headers = {headers: {Authorization:user.token}}\n//     axios.delete(url + 'delete/' + id) \n//     .then(response => {\n//       const withoutRemoved = tasks.filter((item) => item.id !== id )\n//       setTasks(withoutRemoved)\n//     }).catch(error => {\n//         alert (error.response.data.error ? error.response.data.error : error)\n//     })\n//   }\n\n//   return (\n//     <div id=\"container\">\n//       <h3>Todos</h3>\n//       <form>\n//         <input type=\"Add new task\" \n//          value={task}\n//          onChange={e => setTask(e.target.value)}\n//          onKeyDown={e => {\n//            if (e.key === 'Enter') {\n//              e.preventDefault()\n//              addTask()\n//            }\n//          }}\n//           />\n//       </form>\n//       <ul>\n//         {\n//           tasks.map(item => (\n//             <Row key={item.id} item={item} deleteTask={deleteTask} />\n//           ))\n//         }\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// import { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import Row from './components/Row';\n\n// const url = 'http://localhost:3001/'; \n\n// function App() {\n//   const [task, setTask] = useState(''); // Stores the current input value\n//   const [tasks, setTasks] = useState([]); \n\n//   // Fetch tasks when the component mounts\n//   useEffect(() => {\n//     axios.get(url)  // Fetch tasks from backend\n//       .then(response => setTasks(response.data))  // Update state with fetched tasks\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);\n//       });\n//   }, []);\n\n//   // Add a new task\n//   const addTask = () => {\n//     if (!task.trim()) return; // Avoid adding empty tasks\n\n//     axios.post(url + 'create', { description: task })  // POST new task to backend\n//       .then(response => {\n//         setTasks(prevTasks => [\n//           ...prevTasks, \n//           { id: response.data.id, description: task }\n//         ]);  // Update tasks state with new task\n//         setTask('');  // Clear input field\n//       })\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);  // Show error if any\n//       });\n//   };\n\n//   // Delete a task\n//   const deleteTask = (id) => {\n//     axios.delete(url + 'delete/' + id) // Delete task by ID\n//       .then(response => {\n//         setTasks(prevTasks => prevTasks.filter((item) => item.id !== id)); // Remove task from state\n//       })\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);\n//       });\n//   };\n  \n//   return (\n//     <div id=\"container\">\n//       <h3>Todos</h3>\n//       <form>\n//         <input\n//           placeholder=\"Add new task\"\n//           value={task}\n//           onChange={(e) => setTask(e.target.value)}\n//           onKeyDown={(e) => {\n//             if (e.key === 'Enter') {\n//               e.preventDefault();\n//               addTask(); // Add task on Enter key\n//             }\n//           }}\n//         />\n//       </form>\n      \n//         <ul>\n\n\n\n   \n//   {\n//   tasks.map(item => (\n//     <Row \n//       key={item.id} \n//       item={item} \n//       deleteTask={deleteTask} \n//     />\n//   ))\n//   }\n// </ul>\n\n      \n//     </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA,eAAeA,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}