{"ast":null,"code":"var _jsxFileName = \"D:\\\\OAMK WORK\\\\Web-Development Project 2024\\\\Todo application back\\\\todo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Row from './components/Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:3001/';\nfunction App() {\n  _s();\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    axios.get(url).then(response => {\n      // console.log('Fetched tasks:', response.data);\n      setTasks(response.data);\n    }).catch(error => {\n      var _error$response, _error$response$data;\n      console.error('Error fetching tasks:', error);\n      alert((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error ? error.response.data.error : error.message);\n    });\n  }, []);\n\n  // const addTask = () => {\n  //   // const headers = {headers: {Authorization:user.token}}\n  //   axios.post(url + 'create', {\n  //     description: task\n  //   })\n  //   .then(response => {\n  //     console.log('Task added: ' ,response.data)\n  //     setTasks([...tasks,{id: response.data.id,description: task}])\n  //     setTask('')\n  //   }).catch(error => {\n  //       alert (error.response?.data?.error ? error.response.data.error : error)\n  //   })\n  // }\n  const addTask = () => {\n    axios.post(url + 'create', {\n      description: task\n    }).then(response => {\n      var _response$data$id;\n      const newTaskId = ((_response$data$id = response.data.id) === null || _response$data$id === void 0 ? void 0 : _response$data$id.id) || response.data.id;\n      const newTask = {\n        id: newTaskId,\n        description: task\n      };\n      setTasks([...tasks, newTask]);\n      setTask('');\n    }).catch(error => {\n      var _error$response2, _error$response2$data;\n      // console.error('Error adding task:', error);\n      alert((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.error ? error.response.data.error : error.message);\n    });\n  };\n\n  // const addTask = () => {\n  //   const token = localStorage.getItem('token'); // or wherever you're storing the token\n  //   axios.post(url + 'create', { description: task }, {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`  // Include the token in the Authorization header\n  //     }\n  //   })\n  //   .then(response => {\n  //     const newTaskId = response.data.id?.id || response.data.id;\n  //     const newTask = {\n  //       id: newTaskId,\n  //       description: task\n  //     };\n  //     setTasks([...tasks, newTask]);\n  //     setTask('');\n  //   })\n  //   .catch(error => {\n  //     alert(error.response?.data?.error ? error.response.data.error : error.message);\n  //   });\n  // };\n\n  // const deleteTask = (id) => {\n  //   const token = localStorage.getItem('token'); // Same here for token\n  //   axios.delete(url + 'delete/' + id, {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`  // Include the token in the Authorization header\n  //     }\n  //   })\n  //   .then(response => {\n  //     const withoutRemoved = tasks.filter(item => item.id !== id);\n  //     setTasks(withoutRemoved);\n  //   })\n  //   .catch(error => {\n  //     alert(error.response?.data?.error ? error.response.data.error : error.message);\n  //   });\n  // };\n\n  // const deleteTask = (id) => {\n  //   // const headers = {headers: {Authorization:user.token}}\n  //   axios.delete(url + 'delete/' + id) \n  //   .then(response => {\n  //     const withoutRemoved = tasks.filter((item) => item.id !== id )\n  //     setTasks(withoutRemoved)\n  //   }).catch(error => {\n  //       alert (error.response?.data?.error ? error.response.data.error : error)\n  //   })\n  // }\n\n  const deleteTask = id => {\n    axios.delete(url + 'delete/' + id).then(response => {\n      const withoutRemoved = tasks.filter(item => item.id !== id);\n      setTasks(withoutRemoved);\n    }).catch(error => {\n      var _error$response3, _error$response3$data;\n      // console.error('Error deleting task:', error);\n      alert((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.error ? error.response.data.error : error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Add new task\",\n        value: task,\n        onChange: e => setTask(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            addTask();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(item => /*#__PURE__*/_jsxDEV(Row, {\n        item: item,\n        deleteTask: deleteTask\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5BLf7lQ5TgcRBITfOL2+tscTUEw=\");\n_c = App;\nexport default App;\n\n// import { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import Row from './components/Row';\n\n// const url = 'http://localhost:3001/'; \n\n// function App() {\n//   const [task, setTask] = useState(''); // Stores the current input value\n//   const [tasks, setTasks] = useState([]); \n\n//   // Fetch tasks when the component mounts\n//   useEffect(() => {\n//     axios.get(url)  // Fetch tasks from backend\n//       .then(response => setTasks(response.data))  // Update state with fetched tasks\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);\n//       });\n//   }, []);\n\n//   // Add a new task\n//   const addTask = () => {\n//     if (!task.trim()) return; // Avoid adding empty tasks\n\n//     axios.post(url + 'create', { description: task })  // POST new task to backend\n//       .then(response => {\n//         setTasks(prevTasks => [\n//           ...prevTasks, \n//           { id: response.data.id, description: task }\n//         ]);  // Update tasks state with new task\n//         setTask('');  // Clear input field\n//       })\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);  // Show error if any\n//       });\n//   };\n\n//   // Delete a task\n//   const deleteTask = (id) => {\n//     axios.delete(url + 'delete/' + id) // Delete task by ID\n//       .then(response => {\n//         setTasks(prevTasks => prevTasks.filter((item) => item.id !== id)); // Remove task from state\n//       })\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);\n//       });\n//   };\n\n//   return (\n//     <div id=\"container\">\n//       <h3>Todos</h3>\n//       <form>\n//         <input\n//           placeholder=\"Add new task\"\n//           value={task}\n//           onChange={(e) => setTask(e.target.value)}\n//           onKeyDown={(e) => {\n//             if (e.key === 'Enter') {\n//               e.preventDefault();\n//               addTask(); // Add task on Enter key\n//             }\n//           }}\n//         />\n//       </form>\n\n//         <ul>\n\n//   {\n//   tasks.map(item => (\n//     <Row \n//       key={item.id} \n//       item={item} \n//       deleteTask={deleteTask} \n//     />\n//   ))\n//   }\n// </ul>\n\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Row","jsxDEV","_jsxDEV","url","App","_s","task","setTask","tasks","setTasks","get","then","response","data","catch","error","_error$response","_error$response$data","console","alert","message","addTask","post","description","_response$data$id","newTaskId","id","newTask","_error$response2","_error$response2$data","deleteTask","delete","withoutRemoved","filter","item","_error$response3","_error$response3$data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","key","preventDefault","map","_c","$RefreshReg$"],"sources":["D:/OAMK WORK/Web-Development Project 2024/Todo application back/todo/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Row from './components/Row';\n\nconst url = 'http://localhost:3001/'\n\nfunction App() {\n\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    axios.get(url)\n    .then(response => {\n      // console.log('Fetched tasks:', response.data);\n      setTasks(response.data) \n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n      alert(error.response?.data?.error ? error.response.data.error : error.message)\n    })\n  }, [])\n\n  // const addTask = () => {\n  //   // const headers = {headers: {Authorization:user.token}}\n  //   axios.post(url + 'create', {\n  //     description: task\n  //   })\n  //   .then(response => {\n  //     console.log('Task added: ' ,response.data)\n  //     setTasks([...tasks,{id: response.data.id,description: task}])\n  //     setTask('')\n  //   }).catch(error => {\n  //       alert (error.response?.data?.error ? error.response.data.error : error)\n  //   })\n  // }\n  const addTask = () => {\n    axios.post(url + 'create', { description: task })\n      .then(response => {\n        const newTaskId = response.data.id?.id || response.data.id;\n        const newTask = {\n          id: newTaskId,\n          description: task\n        };\n        setTasks([...tasks, newTask]);\n        setTask('');\n      })\n      .catch(error => {\n        // console.error('Error adding task:', error);\n        alert(error.response?.data?.error ? error.response.data.error : error.message);\n      });\n  };\n  \n  // const addTask = () => {\n  //   const token = localStorage.getItem('token'); // or wherever you're storing the token\n  //   axios.post(url + 'create', { description: task }, {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`  // Include the token in the Authorization header\n  //     }\n  //   })\n  //   .then(response => {\n  //     const newTaskId = response.data.id?.id || response.data.id;\n  //     const newTask = {\n  //       id: newTaskId,\n  //       description: task\n  //     };\n  //     setTasks([...tasks, newTask]);\n  //     setTask('');\n  //   })\n  //   .catch(error => {\n  //     alert(error.response?.data?.error ? error.response.data.error : error.message);\n  //   });\n  // };\n  \n  // const deleteTask = (id) => {\n  //   const token = localStorage.getItem('token'); // Same here for token\n  //   axios.delete(url + 'delete/' + id, {\n  //     headers: {\n  //       Authorization: `Bearer ${token}`  // Include the token in the Authorization header\n  //     }\n  //   })\n  //   .then(response => {\n  //     const withoutRemoved = tasks.filter(item => item.id !== id);\n  //     setTasks(withoutRemoved);\n  //   })\n  //   .catch(error => {\n  //     alert(error.response?.data?.error ? error.response.data.error : error.message);\n  //   });\n  // };\n  \n\n  // const deleteTask = (id) => {\n  //   // const headers = {headers: {Authorization:user.token}}\n  //   axios.delete(url + 'delete/' + id) \n  //   .then(response => {\n  //     const withoutRemoved = tasks.filter((item) => item.id !== id )\n  //     setTasks(withoutRemoved)\n  //   }).catch(error => {\n  //       alert (error.response?.data?.error ? error.response.data.error : error)\n  //   })\n  // }\n\n\n  const deleteTask = (id) => {\n    axios.delete(url + 'delete/' + id)\n      .then(response => {\n        const withoutRemoved = tasks.filter(item => item.id !== id);\n        setTasks(withoutRemoved);\n      })\n      .catch(error => {\n        // console.error('Error deleting task:', error);\n        alert(error.response?.data?.error ? error.response.data.error : error.message);\n      });\n  };\n  \n  return (\n    <div id=\"container\">\n      <h3>Todos</h3>\n      <form>\n        <input type=\"Add new task\" \n         value={task}\n         onChange={e => setTask(e.target.value)}\n         onKeyDown={e => {\n           if (e.key === 'Enter') {\n             e.preventDefault()\n             addTask()\n           }\n         }}\n          />\n      </form>\n      {/* <ul>\n        {\n          tasks.map(item => (\n            <Row key={item.id} item={item} deleteTask={deleteTask} />\n          ))\n        }\n      </ul> */}\n\n<ul>\n  {tasks.map(item => (\n    <Row key={item.id} item={item} deleteTask={deleteTask} />\n  ))}\n</ul>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n// import { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import Row from './components/Row';\n\n// const url = 'http://localhost:3001/'; \n\n// function App() {\n//   const [task, setTask] = useState(''); // Stores the current input value\n//   const [tasks, setTasks] = useState([]); \n\n//   // Fetch tasks when the component mounts\n//   useEffect(() => {\n//     axios.get(url)  // Fetch tasks from backend\n//       .then(response => setTasks(response.data))  // Update state with fetched tasks\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);\n//       });\n//   }, []);\n\n//   // Add a new task\n//   const addTask = () => {\n//     if (!task.trim()) return; // Avoid adding empty tasks\n\n//     axios.post(url + 'create', { description: task })  // POST new task to backend\n//       .then(response => {\n//         setTasks(prevTasks => [\n//           ...prevTasks, \n//           { id: response.data.id, description: task }\n//         ]);  // Update tasks state with new task\n//         setTask('');  // Clear input field\n//       })\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);  // Show error if any\n//       });\n//   };\n\n//   // Delete a task\n//   const deleteTask = (id) => {\n//     axios.delete(url + 'delete/' + id) // Delete task by ID\n//       .then(response => {\n//         setTasks(prevTasks => prevTasks.filter((item) => item.id !== id)); // Remove task from state\n//       })\n//       .catch(error => {\n//         alert(error.response?.data?.error ? error.response.data.error : error.message);\n//       });\n//   };\n  \n//   return (\n//     <div id=\"container\">\n//       <h3>Todos</h3>\n//       <form>\n//         <input\n//           placeholder=\"Add new task\"\n//           value={task}\n//           onChange={(e) => setTask(e.target.value)}\n//           onKeyDown={(e) => {\n//             if (e.key === 'Enter') {\n//               e.preventDefault();\n//               addTask(); // Add task on Enter key\n//             }\n//           }}\n//         />\n//       </form>\n      \n//         <ul>\n\n\n\n   \n//   {\n//   tasks.map(item => (\n//     <Row \n//       key={item.id} \n//       item={item} \n//       deleteTask={deleteTask} \n//     />\n//   ))\n//   }\n// </ul>\n\n      \n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}